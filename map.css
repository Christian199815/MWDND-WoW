@layer StandardBoxes, CustomStyles;

:root {
/* scaling properties */
  --board-width: 70dvw;
  --board-height: calc(var(--board-width) * 0.5625);
  --board-border: 1.5em;

  --door-width: 12em;
  --door-height: calc(100dvh - 20%);

  --knob-width: 1em;

  --glass-width: calc(var(--door-width) - 3em);
  --glass-height: calc(var(--door-height) - 70%);

  --window-width: 28em;
  --window-height: calc(100dvh - 20%);
  --window-border-size: 1em;

  --bigPane-width: calc(var(--window-width) - calc(var(--window-border-size) * 2) - 2em);
  --bigPane-height: calc(var(--window-height) - 75%);

  --smallPane-width: calc(var(--window-width) - 60%);
  --smallPane-height: calc(var(--window-height) - 50%);


  --b-width: var(--board-width);
  --b-height: var(--board-height);
  --t-min: 1.5em;
  --t-height: calc(var(--b-height) + var(--t-min) + var(--board-border));
  --ring-width: 3em;

  --handle-cord-width: 1em;
  --handle-cord-height: 2em;
  --extended-cord-height: 4.5em; 

  /* color properties */
  --continent-hover: yellow;

  --board-color: #31343a;
  --board-border-1: #9d5322;
  --board-border-2: #ba825f;

  --classroom-walls: #f5f5dc;
  --classroom-floor: #e2d443;
  --classroom-ceiling: #e0e0e0;

  --contintent-color: #fafafa;

  --knob-color: yellow;

  --knob-boxShadow-color: green;
  --door-color: #aa6639;
  --panel-color: maroon;
  --glass-gradient: linear-gradient(
    135deg,
    rgba(133, 199, 233, 1) 0%,
    rgba(177, 218, 240, 1) 18%,
    rgba(133, 199, 233, 1) 58%,
    rgba(177, 218, 240, 1) 79%,
    rgba(133, 199, 233, 1) 100%
  );
  --glass-border-1: #fafafa;
  --glass-border-2: #f4f4f4;

  --ring-color: rgb(152, 152, 152);

  /* animation properties */
  --open-speed: 1000ms;
  --pull-speed: 300ms;
  --shutter-delay: 100ms;
}



body {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100dvh;

  position: relative;
  margin: 0;
  background-color: #222;
  font-family: Arial, sans-serif;

  overflow: hidden;
}

@layer StandardBoxes {
    body,
    body * {
      transform-style: preserve-3d;
    }
  
    div:first-of-type {
      perspective: 1000px;
      perspective-origin: center center;
    }
  
    .box-container:nth-of-type(1) {
      --x-size: 100vw;
      --y-size: 100dvh;
      /* --y-size: calc(var(--x-size) * 0.5625); */
      --z-size: 20em;
      --hue: 220;
  
      transform-origin: center center;
      /*   transform: translateZ(20em) rotateX(-30deg) translateZ(20em); */
    }
  
    .box {
      width: var(--x-size);
      height: var(--y-size);
  
      position: relative;
      transform-style: preserve-3d;
      transform-origin: bottom center;
    }
  
    .face {
      position: absolute;
      transform-style: preserve-3d;
      background-color: hsl(var(--hue), 100%, var(--lightness));
      opacity: 0.6;
    }
  
    .face.front,
    .face.back {
      width: var(--x-size);
      height: var(--y-size);
    }
  
    .face.bottom,
    .face.top {
      width: var(--x-size);
      height: var(--z-size);
    }
  
    /* Side faces should match the depth */
    .face.left,
    .face.right {
      width: var(--z-size);
      height: var(--y-size);
    }
  
    .face.front {
      --lightness: 66%;
      display: none;
    }
  
    .face.back {
      transform-origin: center bottom;
  
      transform: rotateX(180deg) translateZ(var(--z-size)) rotateX(180deg);
      --lightness: 62%;
    }
  
    .face.bottom {
      bottom: 0;
      transform-origin: bottom;
      transform: rotateX(-90deg) translateY(var(--z-size));
      --lightness: 72%;
    }
  
    .face.top {
      bottom: 100%;
      transform-origin: bottom;
      transform: rotateX(90deg);
      --lightness: 74%;
    }
  
    .face.right {
      left: var(--x-size);
      bottom: 0;
      transform-origin: left bottom;
      transform: rotateY(90deg);
      --lightness: 70%;
    }
  
    .face.left {
      right: var(--x-size);
      bottom: 0;
      transform-origin: right bottom;
      transform: rotateY(-90deg);
      --lightness: 70%;
      /* background-image: url("doc-images/box1.png"); */
    }
  
    /* Add display flex to top face to center joystick */
    .face.top {
      display: flex;
      justify-content: center;
      align-items: end;
    }
  }
  
  @layer CustomStyles {
    .face {
      background-color: var(--classroom-walls);
    }
  
    .face.back {
      display: flex;
      justify-content: center;
      align-items: center;
  
      position: relative;
    }
  
    .face.left {
    }
  
    .face.top {
      background-color: var(--classroom-ceiling);
    }
  
    .face.bottom {
      background-color: var(--classroom-floor);
    }
  }

/* #region Classroom Styling */

#board {
  width: var(--board-width);
  height: var(--board-height);

  /* background-color: var(--board-color); */
  background-image: url("content/chalkBoard.png");
  background-size: cover;


  display: flex;
  justify-content: center;
  align-items: center;

  border: var(--board-border) solid var(--board-border-1);
  border-style: outset;
  border-color: var(--board-border-1) var(--board-border-2);
  position: relative;
}

.shutter >  svg {
    fill: var(--contintent-color);
}

.shutter > svg path:hover {
  fill: var(--continent-hover);
}

.shutter> svg {
  width: 120%;
  height: 120%;
  position: absolute;
  bottom: calc((var(--board-height) - 90%) * -1);
}

#board > svg:nth-of-type(2){
    width: 41%;
    aspect-ratio: 1;
    /* height: 100%; */

    position: absolute;
    /* top: calc(var(--board-height) - 40em); */
    left: 51px;
}

#board > svg:nth-of-type(2) path{
    fill: green;
}

.clockBox{
    position: absolute;
    top: 0;
    right: 0;
}


.door {
    width: var(--door-width);
    height: var(--door-height);
  
    background-color: var(--door-color);
  
    position: absolute;
    bottom: 0;
    right: 20%;
  }
  
  .knob {
    border-radius: 100%;
    width: var(--knob-width);
    aspect-ratio: 1;
  
    background-color: var(--knob-color);
  
    position: absolute;
    top: calc((var(--door-height) / 2) - (var(--knob-width) / 2));
    left: 10px;
  
    box-shadow: 0px 0px 6px 4px var(--knob-boxShadow-color);
  }
  
  .glass {
    width: var(--glass-width);
    height: var(--glass-height);
  
    background-image: var(--glass-gradient);
  
    position: absolute;
    left: calc((var(--door-width) / 2) - (var(--glass-width) / 2));
    top: calc((var(--door-height) / 4) - (var(--glass-height) / 2));
  
    border: 0.5em solid var(--board-border-1);
    border-style: outset;
    border-color: var(--board-border-1) var(--board-border-2);
  }
  
  .panel {
    width: var(--glass-width);
    height: var(--glass-height);
  
    background-color: var(--panel-color);
  
    position: absolute;
    left: calc((var(--door-width) / 2) - (var(--glass-width) / 2));
    bottom: calc((var(--door-height) / 4) - (var(--glass-height) / 2));
  
    border: 0.5em solid var(--board-border-1);
    border-style: outset;
    border-color: var(--board-border-1) var(--board-border-2);
  }
  
  .window {
    position: absolute;
    top: 10%;
    width: var(--window-width);
    height: var(--window-height);
  
    background-color: white;
  }
  
  .bigPane {
    position: absolute;
    width: var(--bigPane-width);
    height: var(--bigPane-height);
    left: calc(var(--window-border-size));
    top: 2.5%;
  
    background-image: var(--glass-gradient);
  
    border: 1em solid var(--glass-border-1);
    border-style: outset;
    border-color: var(--glass-border-1) var(--glass-border-2);
  }
  
  .smallPane {
    position: absolute;
    width: var(--smallPane-width);
    height: var(--smallPane-height);
  
    bottom: 2.5%;
  
    background-image: var(--glass-gradient);
  
    border: 1em solid var(--glass-border-1);
    border-style: outset;
    border-color: var(--glass-border-1) var(--glass-border-2);
  }
  
  .window div:nth-child(2) {
    left: var(--border-size);
  }
  
  .window div:nth-child(3) {
    right: var(--window-border-size);
  }
  

/* #endregion */

/* #region Shutter */

.shutter {
  width: var(--b-width);
  height: var(--t-min);

  position: absolute;
  top: calc((var(--t-min) + var(--board-border)) * -1);

  transition: height var(--open-speed);
  transition-delay: var(--shutter-delay);

  /* background-color: green; */
  background-image: url("content/mapTexture.png");
  background-size: cover;

  border-radius: 25px 25px 0 0;
}

/* Cover logo */
.shutter svg {
  opacity: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: opacity var(--open-speed);
  transition-delay: var(--shutter-delay);
  position: absolute;
  top: 0;
  left: 0;
}

/* Handle container */
.handle {
  position: absolute;
  left: calc((var(--b-width) / 2) - (var(--ring-width) / 2));
  bottom: 0; /* Attach to bottom of shutter */
  z-index: 10;
}

/* Cord */
.handle div {
  width: var(--handle-cord-width);
  height: var(--handle-cord-height);
  position: absolute;
  left: calc((var(--ring-width) / 2) - (var(--handle-cord-width) / 2));
  top: 0; /* Start at the bottom of the shutter */
  background-color: yellow;
  transform-origin: top;

  /* Transition for extending and retracting */
  transition-property: height;
  transition-duration: var(--pull-speed), var(--open-speed);
  transition-delay: 0s, var(--shutter-delay);
}

/* Ring */
.handle input {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  width: var(--ring-width);
  aspect-ratio: 1;
  border-radius: 50%;
  border: 10px solid var(--ring-color);
  background-color: transparent;
  cursor: pointer;
  position: absolute;
  top: var(--handle-cord-height); /* Position at bottom of cord */
  left: 0;

  /* Transition for moving up and down with cord */
  transition-property: transform;
  transition-duration: var(--pull-speed), var(--open-speed);
  transition-delay: 0s, var(--shutter-delay);
}

/* When checked, extend cord in first phase */
body:has(.shutter input:checked) .handle div {
  height: var(--extended-cord-height);
}

/* When checked, move ring down in first phase */
body:has(.shutter input:checked) .handle input {
  transform: translateY(
    calc(var(--extended-cord-height) - var(--handle-cord-height))
  );
}

/* When checked, open shutter after delay */
body:has(.shutter input:checked) .shutter {
  height: var(--t-height);
}

/* When checked, show image after delay */
body:has(.shutter input:checked) .shutter svg {
  opacity: 1;
}

/* #endregion */




/* #region Quy Code */

html {
    --btn-size: 7rem;
    --extra-space: 1.5rem;
}

.item {
    --radius: calc(var(--btn-size) + var(--extra-space));
    background-color: var(--bg);
    transform: translateX(calc(cos(var(--angle)) * var(--radius))) translateY(calc(sin(var(--angle) * -1) * var(--radius))) rotate(0deg);
    opacity: 0;
    transition: all 0.6s var(--delay) ease;
}

.menu-items:not(:popover-open) .item {
    --radius: 0;
    --angle: 0;
}

.menu-items {
    background: none;
    inset: auto;
    border: none;
    height: fit-content;
    padding: 0;
    /*  position  */
    position-area: center;
}

.hidden-close {
    transition: opacity 0.1s;
    transition-delay: 1s;
    width: var(--btn-size);
    aspect-ratio: 1;
}

:popover-open .item {
    opacity: 1;
    width: var(--btn-size);
}

[popover] {
    width: var(--btn-size);
    aspect-ratio: 1;
}

.item {
    border-radius: 50%;
    width: var(--btn-size);
    aspect-ratio: 1;
}

.menu-toggle {
    border-radius: 50%;
    width: var(--btn-size);
    aspect-ratio: 1;
    z-index: 1;
    position: absolute;
}

/* active item */

.item:nth-child(1) {
    --bg: pink;
    --angle: 0deg;
    --delay: 0s;
}

.item:nth-child(2) {
    --bg: thistle;
    --angle: calc(1*72deg);
    --delay: 0s;
}

.item:nth-child(3) {
    --bg: paleturquoise;
    --angle: calc(2*72deg);
    --delay: 0s;
}

.item:nth-child(4) {
    --bg: lightgreen;
    --angle: calc(3*72deg);
    --delay: 0s;
}

.item:nth-child(5) {
    --bg: peachpuff;
    --angle: calc(4*72deg);
    --delay: 0s;
}
.item:nth-child(6) p{
    font-size: 1rem;
    transform: translateY(1rem); 
}

.item:nth-child(6) {
    font-size:medium;
    background-image:
     radial-gradient(
        farthest-side circle,
        #000 8%,
        #FFF 0,
        #FFF 80%,
        transparent 0
      ), repeating-conic-gradient(
        transparent 0deg,
        #000 0deg,
        #000 2deg,
        transparent 1deg,
        transparent 30deg
      ), radial-gradient(
        farthest-side circle,
        #FFF 90%,
        transparent 0
      ), repeating-conic-gradient(
        transparent 0deg,
        #aaa 0deg,
        #aaa 1deg,
        transparent 1deg,
        transparent 6deg
      );
}

/* Grid piles */

.menu,
.menu-items,
.item {
    display: grid;
    place-content: center;
}

.menu>*,
.menu-items>*,
body>* .item button {
    grid-area: 1/1;
}

button {
    border: none;
    background: none;
    color: #222;
    font-size: 1.25rem;
}

button:focus-visible {
    outline: 2px solid deeppink;
    border-radius: 50%;
    aspect-ratio: 1/1;
}

.menu,
.menu-items {
    overflow: unset;
}

/* //================================// */
/* //==========popover===========// */
/* //================================// */

#continent-popover {
    width: 80%;
    height: 90%;
    background: transparent;
    border: 0;
    overflow-y:hidden;
}

/* //================================// */
/* //==========clock===========// */
/* //================================// */

.menu {
  --minute-rotation: 0deg;
  --second-rotation: 0deg;
  
  >p {
    color: red;
    font-family: sans-serif;
    transform: translateY(1em)
  }

  display: flex;
  align-items: center;
  border-radius: 50%;
  width: var(--btn-size);
  aspect-ratio: 1;
  border: solid 3px black;
  background-image: radial-gradient(
    farthest-side circle,
    #000 8%,
    #FFF 0,
    #FFF 80%,
    transparent 0
  ), repeating-conic-gradient(
    transparent 0deg,
    #000 0deg,
    #000 2deg,
    transparent 1deg,
    transparent 30deg
  ), radial-gradient(
    farthest-side circle,
    #FFF 90%,
    transparent 0
  ), repeating-conic-gradient(
    transparent 0deg,
    #aaa 0deg,
    #aaa 1deg,
    transparent 1deg,
    transparent 6deg
  );
  
  width: var(--btn-size);
  height: var(--btn-size);
  border-radius: 300px;
  position: relative;
  
  &:before {
    content: '';
    position: absolute;
    width: 2px;
    height: 35px;
    border-radius: 2px;
    background: #444;
    transform-origin: bottom;
    transform: rotate(var(--second-rotation));
    margin-bottom: 35px;
  }
  
  &:after {
    content: '';
    position: absolute;
    width: 2px;
    height: 40px;
    border-radius: 5px;
    background: rgb(116, 0, 0);
    transform-origin: bottom;
    transform: rotate(var(--minute-rotation));
    margin-bottom: 40px;
  }
}

.hours {
  position: absolute;
  width: 3px;
  height: 20px;
  border-radius: 5px;
  background: #444;
  transform-origin: bottom;
  margin-bottom: 20px;
  /* No animation here, will be controlled by JavaScript */
}

 /* //================================// */
/* //==========carousel===========// */
/* //================================// */

 .plus-jakarta-sans-thin {
    font-family: "Plus Jakarta Sans", sans-serif;
    font-optical-sizing: auto;
    font-weight: 300;
    font-style: normal;
  }

.plus-jakarta-sans-regular {
    font-family: "Plus Jakarta Sans", sans-serif;
    font-optical-sizing: auto;
    font-weight: 400;
    font-style: normal;
  }
  .plus-jakarta-sans-medium {
    font-family: "Plus Jakarta Sans", sans-serif;
    font-optical-sizing: auto;
    font-weight: 500;
    font-style: normal;
  }
  .plus-jakarta-sans-bold {
    font-family: "Plus Jakarta Sans", sans-serif;
    font-optical-sizing: auto;
    font-weight: 700;
    font-style: normal;
  }
  .plus-jakarta-sans-extraBold {
    font-family: "Plus Jakarta Sans", sans-serif;
    font-optical-sizing: auto;
    font-weight: 800;
    font-style: normal;
  }

body {
    font-family:"Plus Jakarta Sans", Helvetica, sans-serif;
}

.slider-container {
    position: relative;
    width: 100%;
    height: 100%;
    margin: 2em auto;
    perspective: 1000px;
    overflow: scroll;
}

.slider {
    margin: 0 5em ;
    padding: 1.5em calc(50dvw - 6.5em) 1.5em calc(50dvw - 6.5em);
    position: relative;
    display: flex;
    transition: transform 0.5s ease;
    overflow-x: auto;
    overscroll-behavior-x: contain;
    scroll-snap-type: x mandatory;
   


    &::scroll-button(*) {
        position: fixed;
        font-family: "Material Symbols Outlined";
        border-radius:50% ;
        padding: 1em 1.2em;
        margin: 0 .5em ;
        outline: .1em solid rgb(59, 59, 152) ;
        background-color: white;
    }

    &::scroll-button(inline-start) {
        content: "⬅" / "previous";
        position: absolute;
        top: 40%;
        left: 1em;

    }

    &::scroll-button(inline-end) {
        content: "⮕" / "Next";
        position: absolute;
        top: 40%;
        right: 1em;
    }

    &::scroll-button(*)::focus-visible {
        outline-offset: 1em;
    }

    .card {
        container-type: scroll-state;
        list-style: none;
        scroll-snap-align: center;
        scroll-snap-stop:always;
        scroll-behavior: smooth;

    
       

        >div {
            padding: 1em;
            border-radius: .5em;
            background-color: white;
    
            /* display: flex;
            flex-direction: column; */
            display: grid;
            grid-template-rows: 30vh 4vh max-content 5vh;
            text-align: start;
            border-radius: .5em;
            box-shadow: .1em .1em .5em rgb(203, 203, 203);
            transition: transform 0.5s ease, opacity 0.3s ease;
            transform-origin: center;
            opacity: 1;
            transform: scale(1);
            width: 16em;
            height: fit-content;
            @container not scroll-state(snapped: x) {
                interactivity: inert;
                opacity: .25;
                transform: scale(.7);
    
            }
            >div{
                display: flex;
                justify-content: space-around;
            }

        }
    }
}



.card img {
    margin: 0;
    width: 100%; /* Zorgt ervoor dat de afbeelding de volledige breedte van het element inneemt */
    height: 100%; /* Zorgt ervoor dat de afbeelding de volledige hoogte van de eerste rij inneemt */
    object-fit: cover; /* Zorgt ervoor dat de afbeelding de ruimte volledig vult zonder te vervormen */
}

.card h2 {
    margin: .5em 0;
    font-size: 1em;
    hyphens: auto;
    font-style: italic;
    font-weight: 100;
    margin-left: .5em;
    align-self: center;
}

.card p {
    font-size: 1.3em 0;
    align-self: center;

    /* margin: .5em; */
}

.card p:first-of-type{
    font-size: 1.7em;
    font-style: italic;
    padding: 0;
    margin: .5em 0;
}
.card p:nth-child(5)::before{
    content: '📍';
}
.card p:nth-child(5)::first-line{
    font-weight: 700;
}

.card a{
    font-weight: 600;
    color: rgb(36, 36, 36);
    align-self: center;
}

.card a:visited{
    color: rgb(36, 36, 36);
}

/* #endregion  */


/* Add these CSS rules to make the a tag work correctly */
.show-all-button {
  display: block;
  width: var(--door-width);
  height: var(--door-height);
  position: absolute;
  bottom: 0;
  right: 20%;
  cursor: pointer;
  z-index: 10; /* Ensure it's above other elements */
}

/* Update the door positioning since it's now inside the anchor tag */
